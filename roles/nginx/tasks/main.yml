- name: Install and configure nginx server
  become: true
  block:
    - name: Install Nginx
      ansible.builtin.dnf:
        name: 
          - nginx
          - certbot
        state: present

    - name: Check if firewalld is present and running
      ansible.builtin.service_facts:

    - name : Generate nginix certificate
      ansible.builtin.command:
        cmd: >-
          sudo certbot certonly --standalone --non-interactive --agree-tos -d {{ server_name }} --email {{ email }}
      notify: 
        - Restart nginx

    - name: Start and enable Nginx service
      ansible.builtin.service:
        name: nginx
        state: started
        enabled: yes
    
    - name: Copy nginx configuration
      ansible.builtin.template:
        src: nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        owner: root
        group: root
        mode: 0644
      notify: 
        - Restart nginx

    - name: Copy {{ item.name }} nginx configuration
      ansible.builtin.template:
        src: site.conf.j2
        dest: /etc/nginx/default.d/{{ item.filename }}.conf
        owner: root
        group: root
        mode: 0644
      when: sities is defined
      loop: '{{ sities }}'
      notify: 
        - Restart nginx

    - name : Generate {{ item.name }} nginix certificate
      ansible.builtin.command:
        cmd: >-
          sudo certbot certonly --standalone --non-interactive --agree-tos -d {{ item.name }} --email {{ item.email }}
      when: sities is defined
      loop: '{{ sities }}'
      notify: 
        - Restart nginx

    - name: Configure firewall to allow http and https
      block:
        - name: Permit traffic on 80 port
          ansible.posix.firewalld:
            service: http
            permanent: true
            immediate: true
            state: enabled
            
        - name: Permit traffic on 443 port
          ansible.posix.firewalld:
            service: https
            permanent: true
            immediate: true
            state: enabled
      when: >-
        ansible_facts.services['firewalld.service'].state is defined and
        ansible_facts.services['firewalld.service'].state == 'running'    
      notify:
        - Restart firewalld service